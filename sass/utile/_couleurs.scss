/* variable Sass */

/* palette de couleurs */

$--clr-bleu-pale: hsl(220, 100%, 85%);
$--clr-bleu-leger: hsl(220, 100%, 60%);
$--clr-bleu-moyen: hsl(220, 100%, 30%);
$--clr-bleu-fonce: hsl(220, 100%, 15%);

$--clr-orange-pale: hsl(40, 100%, 85%);
$--clr-orange-leger: hsl(40, 100%, 50%);
$--clr-orange-moyen: hsl(40, 100%, 30%);
$--clr-orange-fonce: hsl(40, 100%, 15%);

$--clr-rouge-pale: hsl(10, 100%, 85%);
$--clr-rouge-leger: hsl(10, 100%, 50%);
$--clr-rouge-moyen: hsl(10, 100%, 30%);
$--clr-rouge-fonce: hsl(10, 100%, 15%);

$--clr-vert-pale: hsl(70, 100%, 85%);
$--clr-vert-leger: hsl(70, 100%, 50%);
$--clr-vert-moyen: hsl(70, 100%, 30%);
$--clr-vert-fonce: hsl(70, 100%, 15%);

/* A partir des variables de couleurs de la palette choisie
on un mapping en catégorisant les différentes couleurs,
Ce map contient un map principal et plusieurs sous-map */

$defaut: (
  primaire: (
    100: $--clr-bleu-pale,
    200: $--clr-bleu-leger,
    300: $--clr-bleu-moyen,
    400: $--clr-bleu-fonce,
  ),
  secondaire: (
    100: $--clr-orange-pale,
    200: $--clr-orange-leger,
    300: $--clr-orange-moyen,
    400: $--clr-orange-fonce,
  ),
  ternaire: (
    100: $--clr-rouge-pale,
    200: $--clr-rouge-leger,
    300: $--clr-rouge-moyen,
    400: $--clr-rouge-fonce,
  ),
  vert: (
    100: $--clr-vert-pale,
    200: $--clr-vert-leger,
    300: $--clr-vert-moyen,
    400: $--clr-vert-fonce,
  ),
);

/* Agencement de couleurs */

$agencement-couleur: (
  primaire: (
    $--clr-bleu-pale,
    ($--clr-bleu-fonce, $--clr-bleu-leger),
  ),
  secondaire: (
    $--clr-orange-fonce,
    $--clr-orange-pale,
  ),
  ternaire: (
    $--clr-rouge-fonce,
    $--clr-rouge-pale,
  ),
  vert: (
    $--clr-vert-fonce,
    $--clr-vert-pale,
  ),
);

:root {
  /* Calcul des teintes) */
  --u1: 220; // couleur initiale
  --u2: calc(var(--u1) - 180); // couleur complémentaire
  --u3: calc(var(--u2) - 30); // couleur analogue gauche
  --u4: calc(var(--u2) + 30); // couleur analogue droite
  /* La saturation */
  --s-arriere: 100%;
  --s-avant: 50%;
  /* la luminosité */
  --l-arriere: 30%;
  --l-avant: 20%;

  /* couleur avant plan  - color  */
  --couleur-entete: hsl(var(--u1), var(--s-avant), var(--l-avant));
  --couleur-accueil: hsl(var(--u2), var(--s-avant), var(--l-avant));
  --couleur-evenement: hsl(var(--u3), var(--s-avant), var(--l-avant));
  --couleur-galerie: hsl(var(--u4), var(--s-avant), var(--l-avant));
  --couleur-footer: hsl(var(--u1), var(--s-avant), var(--l-avant));

  /* Couleur monochrome */

  /* couleur arrière plan - background-color */
  --couleur-arriere-menu: hsl(var(--u1), 100%, 30%);
  --couleur-arriere-entete: hsl(var(--u1), 100%, 70%);
  --couleur-arriere-accueil: hsl(var(--u1), 100%, 75%);
  // --couleur-arriere-evenement:hsl(var(--u1),100%,80% );
  // --couleur-arriere-galerie: hsl(var(--u1),100%,85% );
  --couleur-arriere-footer: hsl(var(--u1), 100%, 70%);

  --couleur-arriere-evenement: var(--couleur-arriere-accueil);
  --couleur-arriere-galerie: var(--couleur-arriere-accueil);

  --couleur-entete: hsl(var(--u1), 100%, 30%);
  --couleur-accueil: hsl(var(--u1), 100%, 25%);
  --couleur-evenement: hsl(var(--u1), 100%, 20%);
  --couleur-galerie: hsl(var(--u1), 100%, 15%);
  --couleur-footer: hsl(var(--u1), 100%, 15%);

  --couleur-arriere-diagonal: hsl(var(--u2), 100%, 80%);
}

/* variable local */

.carte {
  --_couleur-arriere: hsl(var(--u1), 100%, 85%);
}

#entete {
  --_couleur-arriere-vague: var(--couleur-arriere-accueil);
}

#galerie {
  --_couleur-arriere-vague: var(--couleur-arriere-footer);
}
